plot(rwalk(n=100,r=1,c=1), type='l')
plot(rwalk(n=100,r=1,c=1), type='l')
plot(rwalk(n=100,r=1,c=1), type='l')
plot(rwalk(n=100,r=1,c=1), type='l')
plot(rwalk(n=100,r=1,c=1), type='l')
ts <- rwalk(n=100, r=1, k=0.01)
adf.test
library(aTSA)
install.packages("aTSA")
library(aTSA)
adf.test(ts)
plot(ts, type="k")
plot(ts, type="l")
ts <- rwalk(n=100, r=0.5, k=0.01)
plot(ts, type='l')
ts <- rwalk(n=100, r=0.5, k=1)
plot(ts, type='l')
ts <- rwalk(n=100, r=0.5, k=0.5)
plot(ts, type='l')
ts <- rwalk(n=100, r=0.5, k=0.2)
plot(ts, type='l')
adf.test(ts)
ts <- rwalk(n=100, r=0.5, c=1)
plot(ts, type='l')
ts <- rwalk(n=100, r=1, c=1)
plot(ts, type='l')
plot(ts, type='l')
plot(ts, type='l')
ts <- rwalk(n=100, r=1, c=1)
plot(ts, type='l')
ts <- rwalk(n=100, r=1, c=1)
plot(ts, type='l')
adf.test(ts)
?cumsum
library(haven)
cfps2018 <- read_dta("Documents/CFPS/cfps2018famecon_201909.dta")
View(cfps2018)
cfps2018$urban18
cfps2018$fa01
library(haven)
cfps2018p <- read_dta("Documents/CFPS/cfps2018person_201911.dta")
View(cfps2018p)
library(haven)
chfs2017_hh <- read_dta("Documents/CHFS/chfs2017_hh.dta")
View(chfs2017_hh)
chfs2017_hh$j1001
chfs2017_hh$a2019
library(haven)
chfs2017_ind <- read_dta("Documents/CHFS/chfs2017_ind.dta")
View(chfs2017_ind)
chfs2017_ind %>% group_by(a2019) %>% summarise()
library(purrr)
chfs2017_ind %>% group_by(a2019) %>% summarise()
library(dplyr)
chfs2017_ind %>% group_by(a2019) %>% summarise()
?summarize
chfs2017_ind %>% group_by(a2019) %>% n()
chfs2017_ind %>% group_by(a2019)
chfs2017_ind %>% group_by(a2019) %>% summarize(n = n())
View(.Last.value)
data(mtcars)
force(mtcars)
separate()
library(tidyr)
separate()
chfs2017_ind <- separate(chfs2017_ind, a2019, sep = '-', into=c('a2019_1', 'a_2019_2', 'a_2019_3'))
View(chfs2017_ind)
View(chfs2017_ind)
chfs2017_ind %>% group_by(a2019) %>% count()
chfs2017_ind %>% group_by(a_2019_2) %>% count()
View(.Last.value)
mtcars
data()
data(cars)
force(cars)
View(mtcars)
summary(mtcars)
describe(mtcars)
library(Hmisc)
describe(mtcars)
gather(mtcars)
gtcars <- .Last.value
View(gtcars)
spread(gtcars)
mtcars
mtcars$index
mtcars[[1]]
row.names(mtcars)
data()
data("iris")
force(iris)
View(iris)
library(tidyr)
library(ggplot2)
data(mpg)
force(mpg)
View(mpg)
library(haven)
dataset <- read_sav(NULL)
View(dataset)
library(haven)
X09836_0001_Data <- read_dta("Documents/CHIP/CHIP 1988/Rural/DS0001_rural_individual/09836-0001-Data.dta")
View(X09836_0001_Data)
library(haven)
X09836_0001_Data <- read_dta("Documents/CHIP/CHIP 1988/Rural/DS0001_rural_individual/09836-0001-Data.dta")
View(X09836_0001_Data)
library(haven)
X09836_0002_Data <- read_dta("Documents/CHIP/CHIP 1988/Rural/DS0002_rural_household/09836-0002-Data.dta")
View(X09836_0002_Data)
library(haven)
dataset <- read_sav(NULL)
View(dataset)
library(haven)
X09836_0002_Data <- read_dta("Documents/CHIP/CHIP 1988/Rural/DS0002_rural_household/09836-0002-Data.dta")
View(X09836_0002_Data)
X09836_0002_Data$UDA3
library(haven)
X09836_0001_Data <- read_dta("Documents/CHIP/CHIP 1988/Rural/DS0001_rural_individual/09836-0001-Data.dta")
View(X09836_0001_Data)
X09836_0002_Data$GP3
X09836_0001_Data$RESIDENC
X09836_0001_Data$EMPLOY
X09836_0001_Data$wage
X09836_0001_Data$WAGE
summary(X09836_0002_Data$UDA3)
table(X09836_0002_Data$UDA3)
install.packages("sloop")
library(sloop)
m <- matrix(1:9, nrows=3,ncol=3)
m <- matrix(1:9, nrow=3,ncol=3)
m
class(m)
typeof(m)
otype(m)
df <- data.frame(m)
df
class(df)
typeof(df)
otype(df)
a <1:10
a <- 1:10
a
attributes(a)
a <- 1:3
names(a) <- c('a','b','c')
a
attributes(a)
a.attr
attr(a, 'color') <- c('red', 'blue', 'yellow')
a
class(m)
unclass(m)
m
class(m)
f <- factor(c("a", "b", "c"))
class(f)
typeof(f)
f
attributes(f)
f
unclass(f)
f
df
unclass(df)
ftype(print)
ftype(typeof)
ftype(class)
s3_dispatch(print(f))
s3_dispatch(print(m))
s3_dispatch(print(a))
s3_get_method(f)
s3_get_method(factor)
s3_get_method(data.frame)
s3_get_method(print.factor)
methods
methods(factor)
matrix
list
a
a
l <- list(1:10)
l
list
function Student(name, age) { return struction(list(name=name, age=age) , class='Student') }
function student(n, a) { return structure(list(name=n, age=a) , class='student') }
student <- function(n, a) { return structure(list(name=n, age=a) , class='student') }
student <- function(n, a) { return(structure(list(name=n, age=a) , class='student')) }
student
s <- student(n="Peter", a=23)
s
methods(print)
print.eigen
print.table
typeof(print)
methods(print)
factor
f
unclass(f)
data.frame
(function(a=123,b=456){ return(a+b) })()
(function(a=123,b=456){ return(a+b) })(1,2)
double()
double
a <- integer()
a
a == 0
a == 1
typeof(a)
class(a)
integer
integer(2)
length(a)
print
s3_dispatch(print(f))
s3_method_class(factor)
s3_method_class("factor")
s3_method_class("data.frame")
s3_methods_class("data.frame")
s3_methods_class("factor")
...
s
print
data.table
data.frame
desc
library(dplyr)
desc
a <- 1:10
desc(a)
?desc
?arrange
arrange
install.packages(gapminder)
install.packages("gapminder")
clear
library(gapminder)
gapminder
gp <- gapminder
View(gp)
gp
library(dplyr)
tail(gp)
head(dp, 100)
head(gp, 100)
head(gp)
View(gp)
summary(gp)
?summary
dp %>% arrange(desc(gdpPercap))
gp %>% arrange(desc(gdpPercap))
count
View(gp)
write.csv(gp, file="~/Downloads/gapmind.csv",sep=",",na = "",row.names=FALSE)
quantile
?seq
seq(0,1,0.25)
gp %>% group_by(continent) %>% summarize(q=quantile(gdpPercap, c(0.25,0.5,0.9)))
?summarize_all
gp %>% group_by(continent) %>% summarize(q25=quantile(gdpPercap, probs = 0.25),q50=quantile(gdpPercap, probs = 0.5), q75=quantile(gdpPercap, probs = 0.75))
ggplot(gp, aes(x=pop)) + scale_x_log10() + geom_histogram()
library(ggplot2)
ggplot(gp, aes(x=pop)) + scale_x_log10() + geom_histogram()
ggplot(gp, aes(x=pop)) + scale_x_log10() + geom_freqpoly()
ggplot(gp, aes(x=pop,color=year)) + scale_x_log10() + geom_freqpoly()
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly()
summary(gp$year)
count(gp$year)
gp %>% group_by(year) %>% summarize(mean(lifeExp))
ggplot(gp %>% filter(year > 1980), aes(x=pop,color=year)) + scale_x_log10() + geom_freqpoly()
ggplot(gp, aes(x=pop,color=as.factor(year))) + scale_x_log10() + geom_freqpoly()
ggplot(gp, aes(x=pop,color=as.factor(year))) + geom_freqpoly()
?labs
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly()
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count")
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution")
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution")
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption="Source: World Bank")
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption="Source: World Bank", color="Continent")
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption=element_text("Source: World Bank",hjust='left'), color="Continent")
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption=element_text("Source: World Bank",hjust=0.5), color="Continent")
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption="Source: World Bank", color="Continent")
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption="Source: World Bank", color="Continent") + theme(title=element_text(hjust=0.5))
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption="Source: World Bank", color="Continent")
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption="Source: World Bank", color="Continent") + theme(plot.title=element_text(hjust=0.5))
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption="Source: World Bank", color="Continent") + theme(plot.title=element_text(hjust=0.5), plot.caption = element_text(hjust=0))
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption="Source: World Bank", color="Continent") + theme(plot.title=element_text(family="Times", hjust=0.5), plot.caption = element_text(hjust=0))
ggplot(gp, aes(x=pop,color=continent)) + scale_x_log10() + geom_freqpoly() + labs(x="Population",y="Count", title="Distribution", caption="Source: World Bank", color="Continent") + theme_classic()
str(gp)
glimpse(gp)
library(tidyr)
?gather
?spread
gp %>% pivot_wider(names_from = year, values_from = c(lifeExp, pop, gdpPercap))
gp_wide <- .Last.value
View(gp_wide)
?unite
library(lubridate)
ymd("2015-08-21")
d <- ymd("2015-08-21")
class(d)
as_date("2018_08")
as_date("2018-08")
?hist
?vars
View(gp)
vars(gp$country:gp$pop)
gp %>% select(country:pop)
?count
count(gp$continent)
gp %>% count(continent)
gp %>% tally()
library(tidyverse)
library(tidyverse)
?geom_smooth
?geom_text
?scale_x_discrete
?scale_fill_brewer
economics
?I
?geom_line
describe
library(Hmisc)
describe(gp)
?stat_summary
mea_sdl(1:100)
mean_sdl(1:100)
smean.sdl(1:100)
quantile(1:100)
quantile(1:100)[1]
quantile(1:100)[2]
cgi %>%
ggplot(aes(x = Year, y = `Quantity in Millions`, fill = factor(BRI))) +
stat_summary(fun = sum, geom = 'bar', position = 'stack')             +
scale_x_continuous(breaks = seq(2005, 2019, 1), expand = c(0, 0.5))   +
scale_y_continuous(limits = c(0, 100000), expand = c(0, 0))           +
scale_fill_manual(name     = NULL,
labels   = c("Non-BRI countries", "BRI countries", "Others" ),
values   = brewer.pal(2, "Set1"),
na.value = "grey" )                                 +
labs(x = NULL, y = "Construction Contracts ($ millions)")             +
theme(plot.caption.position = "plot",
plot.caption          = element_text(hjust = 0),
legend.position       = "bottom")
devtools::install_github("gadenbuie/rsthemes")
rsthemes::install_rsthemes()
source('~/Documents/GitHub/rse/bri/R/dat.R')
library(rstudioapi)
library(tidyverse)
library(wbstats)
library(MatchIt)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
quit()
library(rstudioapi)
library(tidyverse)
library(wbstats)
library(MatchIt)
wbsearch("official development assistent", extra=T) %>% View
wbsearch("official development assistence", extra=T) %>% View
wbsearch("ODA", extra=T) %>% View
wbsearch("Industry share", extra=T) %>% View
wbsearch("agriculture share", extra=T) %>% View
wbsearch("agriculture", extra=T) %>% View
install.packages("scales", dependencies = T)
library(scales)
library(tidyverse)
library(rstudioapi)
library(RColorBrewer)
# global theme setting
theme_set(theme_classic())
# load datasets
setwd(dirname(getActiveDocumentContext()$path))
# ======================== Load datasets  ============================
cgi    <- read_csv("../data/cgi.csv"    , col_types = "ifcnncffccfi")
ctry   <- read_csv("../data/country.csv", col_types = "ffffccfiiiiii")
merged <- readRDS ("../data/merged.rds")
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T) %>%
select(Code,Year, GDP, Ratio) %>%
ggplot(aes(x = GDP, y = Ratio)) +
geom_point(alpha = .8) +
scale_y_log10(breaks = log_breaks()) +
scale_x_log10(
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format()))
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T, Year > 2012) %>%
select(Code,Year, GDP, Ratio) %>%
ggplot(aes(x = GDP, y = Ratio)) +
geom_point(alpha = .8) +
scale_y_log10(breaks = log_breaks()) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format()))
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T, Year > 2012) %>%
select(Code,Year, GDP, Ratio) %>%
ggplot(aes(x = GDP, y = Ratio)) +
geom_point(position = "jitter") +
scale_y_log10(breaks = log_breaks()) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format())) +
labs(x = "GDP (current USD)", y = "Annual BRI Investment / GDP") +
theme_bw()
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T, Year > 2012) %>%
select(Code,Year, GDP, Ratio) %>%
ggplot(aes(x = GDP, y = Ratio)) +
geom_point(position = "jitter") +
scale_y_log10(breaks = log_breaks()) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format())) +
geom_hline(yintercept = mean(Ratio)) +
labs(x = "GDP (current USD)", y = "Annual BRI Investment / GDP") +
theme_bw()
ir <- merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T, Year > 2012) %>%
select(Code,Year, GDP, Ratio)
summary(ir)
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T, Year > 2012) %>%
select(Code,Year, GDP, Ratio) %>%
ggplot(aes(x = GDP, y = Ratio)) +
geom_point(position = "jitter") +
scale_y_log10(breaks = log_breaks()) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format())) +
geom_hline(yintercept = 0.0246161) +
labs(x = "GDP (current USD)", y = "Annual BRI Investment / GDP") +
theme_bw()
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T, Year > 2012) %>%
select(Code,Year, GDP, Ratio) %>%
ggplot(aes(x = GDP, y = Ratio)) +
geom_point(position = "jitter") +
scale_y_log10(breaks = log_breaks()) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format())) +
geom_hline(aes(yintercept = mean(ratio)), linetype="dashed") +
labs(x = "GDP (current USD)", y = "Annual BRI Investment / GDP") +
theme_bw()
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T, Year > 2012) %>%
select(Code,Year, GDP, Ratio) %>%
ggplot(aes(x = GDP, y = Ratio)) +
geom_point(position = "jitter") +
scale_y_log10(breaks = log_breaks()) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format())) +
geom_hline(aes(yintercept = mean(Ratio)), linetype="dashed") +
labs(x = "GDP (current USD)", y = "Annual BRI Investment / GDP") +
theme_bw()
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T, Year > 2012) %>%
select(Code,Year, GDP, Ratio) %>%
ggplot(aes(x = GDP, y = Ratio)) +
geom_point(position = "jitter") +
scale_y_log10(breaks = log_breaks()) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format())) +
geom_hline(aes(yintercept = mean(Ratio, na.rm = T)), linetype="dashed") +
labs(x = "GDP (current USD)", y = "Annual BRI Investment / GDP") +
theme_bw()
View(ir)
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T, Year > 2012) %>%
select(Code,Year, GDP, Ratio) %>%
ggplot(aes(x = GDP, y = Ratio)) +
geom_point(position = "jitter") +
scale_y_log10(breaks = c(log_breaks(), .025)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format())) +
geom_hline(aes(yintercept = mean(Ratio, na.rm = T)), linetype="dashed") +
labs(x = "GDP (current USD)", y = "Annual BRI Investment / GDP") +
theme_bw()
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP) %>%
filter (Treatment == T, Year > 2012) %>%
select(Code,Year, GDP, Ratio) %>%
ggplot(aes(x = GDP, y = Ratio)) +
geom_point(position = "jitter") +
scale_y_log10(breaks = c(.001, .01, .1, .025)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format())) +
geom_hline(aes(yintercept = mean(Ratio, na.rm = T)), linetype="dashed") +
labs(x = "GDP (current USD)", y = "Annual BRI Investment / GDP") +
theme_bw()
merged %>%
mutate(Ratio = Invt_quant * 10^6 / GDP)                                 %>%
filter (Treatment == T, Year > 2012)                                    %>%
select(Code,Year, GDP, Ratio)                                           %>%
ggplot(aes(x = GDP, y = Ratio))                                         +
geom_point(position = "jitter")                                         +
scale_y_log10(breaks = c(.001, .01, .1, .025))                          +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format()))            +
geom_hline(aes(yintercept = median(Ratio, na.rm = T)), linetype="dashed") +
labs(x = "GDP (current USD)", y = "Annual BRI Investment / GDP")        +
theme_bw()
